[{"name":"fun Proto.UserToken.toKt(): UserToken","description":"io.github.positionpal.notification.presentation.ProtoConversion.toKt","location":"presentation/io.github.positionpal.notification.presentation/-proto-conversion/to-kt.html","searchKeys":["toKt","fun Proto.UserToken.toKt(): UserToken","io.github.positionpal.notification.presentation.ProtoConversion.toKt"]},{"name":"fun UserToken.toProto(): Proto.UserToken","description":"io.github.positionpal.notification.presentation.ProtoConversion.toProto","location":"presentation/io.github.positionpal.notification.presentation/-proto-conversion/to-proto.html","searchKeys":["toProto","fun UserToken.toProto(): Proto.UserToken","io.github.positionpal.notification.presentation.ProtoConversion.toProto"]},{"name":"object ProtoConversion","description":"io.github.positionpal.notification.presentation.ProtoConversion","location":"presentation/io.github.positionpal.notification.presentation/-proto-conversion/index.html","searchKeys":["ProtoConversion","object ProtoConversion","io.github.positionpal.notification.presentation.ProtoConversion"]},{"name":"class Firebase","description":"io.github.positionpal.notification.fcm.Firebase","location":"fcm/io.github.positionpal.notification.fcm/-firebase/index.html","searchKeys":["Firebase","class Firebase","io.github.positionpal.notification.fcm.Firebase"]},{"name":"class FirebaseCloudNotificationPublisher(firebase: Firebase, usersTokensRepository: UsersTokensRepository, groupsRepository: GroupsRepository) : BasicNotificationPublisher","description":"io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher","location":"fcm/io.github.positionpal.notification.fcm/-firebase-cloud-notification-publisher/index.html","searchKeys":["FirebaseCloudNotificationPublisher","class FirebaseCloudNotificationPublisher(firebase: Firebase, usersTokensRepository: UsersTokensRepository, groupsRepository: GroupsRepository) : BasicNotificationPublisher","io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher"]},{"name":"constructor(firebase: Firebase, usersTokensRepository: UsersTokensRepository, groupsRepository: GroupsRepository)","description":"io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher.FirebaseCloudNotificationPublisher","location":"fcm/io.github.positionpal.notification.fcm/-firebase-cloud-notification-publisher/-firebase-cloud-notification-publisher.html","searchKeys":["FirebaseCloudNotificationPublisher","constructor(firebase: Firebase, usersTokensRepository: UsersTokensRepository, groupsRepository: GroupsRepository)","io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher.FirebaseCloudNotificationPublisher"]},{"name":"constructor(serviceAccountFilePath: String)","description":"io.github.positionpal.notification.fcm.Firebase.Configuration.Configuration","location":"fcm/io.github.positionpal.notification.fcm/-firebase/-configuration/-configuration.html","searchKeys":["Configuration","constructor(serviceAccountFilePath: String)","io.github.positionpal.notification.fcm.Firebase.Configuration.Configuration"]},{"name":"data class Configuration(val serviceAccountFilePath: String)","description":"io.github.positionpal.notification.fcm.Firebase.Configuration","location":"fcm/io.github.positionpal.notification.fcm/-firebase/-configuration/index.html","searchKeys":["Configuration","data class Configuration(val serviceAccountFilePath: String)","io.github.positionpal.notification.fcm.Firebase.Configuration"]},{"name":"fun create(configuration: Firebase.Configuration): Result<Firebase>","description":"io.github.positionpal.notification.fcm.Firebase.Companion.create","location":"fcm/io.github.positionpal.notification.fcm/-firebase/-companion/create.html","searchKeys":["create","fun create(configuration: Firebase.Configuration): Result<Firebase>","io.github.positionpal.notification.fcm.Firebase.Companion.create"]},{"name":"fun sendMessage(token: String, notificationMessage: NotificationMessage): Result<String>","description":"io.github.positionpal.notification.fcm.Firebase.sendMessage","location":"fcm/io.github.positionpal.notification.fcm/-firebase/send-message.html","searchKeys":["sendMessage","fun sendMessage(token: String, notificationMessage: NotificationMessage): Result<String>","io.github.positionpal.notification.fcm.Firebase.sendMessage"]},{"name":"object Companion","description":"io.github.positionpal.notification.fcm.Firebase.Companion","location":"fcm/io.github.positionpal.notification.fcm/-firebase/-companion/index.html","searchKeys":["Companion","object Companion","io.github.positionpal.notification.fcm.Firebase.Companion"]},{"name":"open suspend override fun send(message: NotificationMessage, userIds: Set<UserId>)","description":"io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher.send","location":"fcm/io.github.positionpal.notification.fcm/-firebase-cloud-notification-publisher/send.html","searchKeys":["send","open suspend override fun send(message: NotificationMessage, userIds: Set<UserId>)","io.github.positionpal.notification.fcm.FirebaseCloudNotificationPublisher.send"]},{"name":"val serviceAccountFilePath: String","description":"io.github.positionpal.notification.fcm.Firebase.Configuration.serviceAccountFilePath","location":"fcm/io.github.positionpal.notification.fcm/-firebase/-configuration/service-account-file-path.html","searchKeys":["serviceAccountFilePath","val serviceAccountFilePath: String","io.github.positionpal.notification.fcm.Firebase.Configuration.serviceAccountFilePath"]},{"name":"abstract class BasicNotificationPublisher(groupsRepository: GroupsRepository) : NotificationPublisher","description":"io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher","location":"application/io.github.positionpal.notification.application.notifications.impl/-basic-notification-publisher/index.html","searchKeys":["BasicNotificationPublisher","abstract class BasicNotificationPublisher(groupsRepository: GroupsRepository) : NotificationPublisher","io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher"]},{"name":"abstract infix suspend fun send(notificationMessage: NotificationMessage): PublishingTargetStrategy","description":"io.github.positionpal.notification.application.notifications.NotificationPublisher.send","location":"application/io.github.positionpal.notification.application.notifications/-notification-publisher/send.html","searchKeys":["send","abstract infix suspend fun send(notificationMessage: NotificationMessage): PublishingTargetStrategy","io.github.positionpal.notification.application.notifications.NotificationPublisher.send"]},{"name":"abstract infix suspend fun toAllMembersOf(groupId: GroupId)","description":"io.github.positionpal.notification.application.notifications.PublishingTargetStrategy.toAllMembersOf","location":"application/io.github.positionpal.notification.application.notifications/-publishing-target-strategy/to-all-members-of.html","searchKeys":["toAllMembersOf","abstract infix suspend fun toAllMembersOf(groupId: GroupId)","io.github.positionpal.notification.application.notifications.PublishingTargetStrategy.toAllMembersOf"]},{"name":"abstract infix suspend fun toAllMembersSharingGroupWith(userId: UserId)","description":"io.github.positionpal.notification.application.notifications.PublishingTargetStrategy.toAllMembersSharingGroupWith","location":"application/io.github.positionpal.notification.application.notifications/-publishing-target-strategy/to-all-members-sharing-group-with.html","searchKeys":["toAllMembersSharingGroupWith","abstract infix suspend fun toAllMembersSharingGroupWith(userId: UserId)","io.github.positionpal.notification.application.notifications.PublishingTargetStrategy.toAllMembersSharingGroupWith"]},{"name":"abstract suspend fun addMember(groupId: GroupId, userId: UserId): Result<Unit>","description":"io.github.positionpal.notification.application.groups.GroupsRepository.addMember","location":"application/io.github.positionpal.notification.application.groups/-groups-repository/add-member.html","searchKeys":["addMember","abstract suspend fun addMember(groupId: GroupId, userId: UserId): Result<Unit>","io.github.positionpal.notification.application.groups.GroupsRepository.addMember"]},{"name":"abstract suspend fun delete(userToken: UserToken): Result<Unit>","description":"io.github.positionpal.notification.application.tokens.UsersTokensRepository.delete","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-repository/delete.html","searchKeys":["delete","abstract suspend fun delete(userToken: UserToken): Result<Unit>","io.github.positionpal.notification.application.tokens.UsersTokensRepository.delete"]},{"name":"abstract suspend fun get(userId: UserId): Result<Set<UserToken>>","description":"io.github.positionpal.notification.application.tokens.UsersTokensRepository.get","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-repository/get.html","searchKeys":["get","abstract suspend fun get(userId: UserId): Result<Set<UserToken>>","io.github.positionpal.notification.application.tokens.UsersTokensRepository.get"]},{"name":"abstract suspend fun getGroupsOf(userId: UserId): Result<Set<GroupId>>","description":"io.github.positionpal.notification.application.groups.GroupsRepository.getGroupsOf","location":"application/io.github.positionpal.notification.application.groups/-groups-repository/get-groups-of.html","searchKeys":["getGroupsOf","abstract suspend fun getGroupsOf(userId: UserId): Result<Set<GroupId>>","io.github.positionpal.notification.application.groups.GroupsRepository.getGroupsOf"]},{"name":"abstract suspend fun getMembersOf(groupId: GroupId): Result<Set<UserId>>","description":"io.github.positionpal.notification.application.groups.GroupsRepository.getMembersOf","location":"application/io.github.positionpal.notification.application.groups/-groups-repository/get-members-of.html","searchKeys":["getMembersOf","abstract suspend fun getMembersOf(groupId: GroupId): Result<Set<UserId>>","io.github.positionpal.notification.application.groups.GroupsRepository.getMembersOf"]},{"name":"abstract suspend fun invalidate(userId: UserId, token: Token): Result<Unit>","description":"io.github.positionpal.notification.application.tokens.UsersTokensService.invalidate","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-service/invalidate.html","searchKeys":["invalidate","abstract suspend fun invalidate(userId: UserId, token: Token): Result<Unit>","io.github.positionpal.notification.application.tokens.UsersTokensService.invalidate"]},{"name":"abstract suspend fun register(userId: UserId, token: Token): Result<UserToken>","description":"io.github.positionpal.notification.application.tokens.UsersTokensService.register","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-service/register.html","searchKeys":["register","abstract suspend fun register(userId: UserId, token: Token): Result<UserToken>","io.github.positionpal.notification.application.tokens.UsersTokensService.register"]},{"name":"abstract suspend fun removeMember(groupId: GroupId, userId: UserId): Result<Unit>","description":"io.github.positionpal.notification.application.groups.GroupsRepository.removeMember","location":"application/io.github.positionpal.notification.application.groups/-groups-repository/remove-member.html","searchKeys":["removeMember","abstract suspend fun removeMember(groupId: GroupId, userId: UserId): Result<Unit>","io.github.positionpal.notification.application.groups.GroupsRepository.removeMember"]},{"name":"abstract suspend fun save(userToken: UserToken): Result<Unit>","description":"io.github.positionpal.notification.application.tokens.UsersTokensRepository.save","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-repository/save.html","searchKeys":["save","abstract suspend fun save(userToken: UserToken): Result<Unit>","io.github.positionpal.notification.application.tokens.UsersTokensRepository.save"]},{"name":"abstract suspend fun send(message: NotificationMessage, userIds: Set<UserId>)","description":"io.github.positionpal.notification.application.notifications.NotificationPublisher.send","location":"application/io.github.positionpal.notification.application.notifications/-notification-publisher/send.html","searchKeys":["send","abstract suspend fun send(message: NotificationMessage, userIds: Set<UserId>)","io.github.positionpal.notification.application.notifications.NotificationPublisher.send"]},{"name":"class Conflict(val message: String, val cause: Throwable? = null) : Error","description":"io.github.positionpal.notification.application.tokens.Conflict","location":"application/io.github.positionpal.notification.application.tokens/-conflict/index.html","searchKeys":["Conflict","class Conflict(val message: String, val cause: Throwable? = null) : Error","io.github.positionpal.notification.application.tokens.Conflict"]},{"name":"class NotFound(val message: String, val cause: Throwable? = null) : Error","description":"io.github.positionpal.notification.application.tokens.NotFound","location":"application/io.github.positionpal.notification.application.tokens/-not-found/index.html","searchKeys":["NotFound","class NotFound(val message: String, val cause: Throwable? = null) : Error","io.github.positionpal.notification.application.tokens.NotFound"]},{"name":"class UsersTokensServiceImpl(repository: UsersTokensRepository) : UsersTokensService","description":"io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl","location":"application/io.github.positionpal.notification.application.tokens.impl/-users-tokens-service-impl/index.html","searchKeys":["UsersTokensServiceImpl","class UsersTokensServiceImpl(repository: UsersTokensRepository) : UsersTokensService","io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl"]},{"name":"constructor(groupsRepository: GroupsRepository)","description":"io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher.BasicNotificationPublisher","location":"application/io.github.positionpal.notification.application.notifications.impl/-basic-notification-publisher/-basic-notification-publisher.html","searchKeys":["BasicNotificationPublisher","constructor(groupsRepository: GroupsRepository)","io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher.BasicNotificationPublisher"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"io.github.positionpal.notification.application.tokens.Conflict.Conflict","location":"application/io.github.positionpal.notification.application.tokens/-conflict/-conflict.html","searchKeys":["Conflict","constructor(message: String, cause: Throwable? = null)","io.github.positionpal.notification.application.tokens.Conflict.Conflict"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"io.github.positionpal.notification.application.tokens.NotFound.NotFound","location":"application/io.github.positionpal.notification.application.tokens/-not-found/-not-found.html","searchKeys":["NotFound","constructor(message: String, cause: Throwable? = null)","io.github.positionpal.notification.application.tokens.NotFound.NotFound"]},{"name":"constructor(repository: UsersTokensRepository)","description":"io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.UsersTokensServiceImpl","location":"application/io.github.positionpal.notification.application.tokens.impl/-users-tokens-service-impl/-users-tokens-service-impl.html","searchKeys":["UsersTokensServiceImpl","constructor(repository: UsersTokensRepository)","io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.UsersTokensServiceImpl"]},{"name":"interface GroupsRepository","description":"io.github.positionpal.notification.application.groups.GroupsRepository","location":"application/io.github.positionpal.notification.application.groups/-groups-repository/index.html","searchKeys":["GroupsRepository","interface GroupsRepository","io.github.positionpal.notification.application.groups.GroupsRepository"]},{"name":"interface NotificationPublisher","description":"io.github.positionpal.notification.application.notifications.NotificationPublisher","location":"application/io.github.positionpal.notification.application.notifications/-notification-publisher/index.html","searchKeys":["NotificationPublisher","interface NotificationPublisher","io.github.positionpal.notification.application.notifications.NotificationPublisher"]},{"name":"interface PublishingTargetStrategy","description":"io.github.positionpal.notification.application.notifications.PublishingTargetStrategy","location":"application/io.github.positionpal.notification.application.notifications/-publishing-target-strategy/index.html","searchKeys":["PublishingTargetStrategy","interface PublishingTargetStrategy","io.github.positionpal.notification.application.notifications.PublishingTargetStrategy"]},{"name":"interface UsersTokensRepository","description":"io.github.positionpal.notification.application.tokens.UsersTokensRepository","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-repository/index.html","searchKeys":["UsersTokensRepository","interface UsersTokensRepository","io.github.positionpal.notification.application.tokens.UsersTokensRepository"]},{"name":"interface UsersTokensService","description":"io.github.positionpal.notification.application.tokens.UsersTokensService","location":"application/io.github.positionpal.notification.application.tokens/-users-tokens-service/index.html","searchKeys":["UsersTokensService","interface UsersTokensService","io.github.positionpal.notification.application.tokens.UsersTokensService"]},{"name":"open infix suspend override fun send(notificationMessage: NotificationMessage): PublishingTargetStrategy","description":"io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher.send","location":"application/io.github.positionpal.notification.application.notifications.impl/-basic-notification-publisher/send.html","searchKeys":["send","open infix suspend override fun send(notificationMessage: NotificationMessage): PublishingTargetStrategy","io.github.positionpal.notification.application.notifications.impl.BasicNotificationPublisher.send"]},{"name":"open override val cause: Throwable? = null","description":"io.github.positionpal.notification.application.tokens.Conflict.cause","location":"application/io.github.positionpal.notification.application.tokens/-conflict/cause.html","searchKeys":["cause","open override val cause: Throwable? = null","io.github.positionpal.notification.application.tokens.Conflict.cause"]},{"name":"open override val cause: Throwable? = null","description":"io.github.positionpal.notification.application.tokens.NotFound.cause","location":"application/io.github.positionpal.notification.application.tokens/-not-found/cause.html","searchKeys":["cause","open override val cause: Throwable? = null","io.github.positionpal.notification.application.tokens.NotFound.cause"]},{"name":"open override val message: String","description":"io.github.positionpal.notification.application.tokens.Conflict.message","location":"application/io.github.positionpal.notification.application.tokens/-conflict/message.html","searchKeys":["message","open override val message: String","io.github.positionpal.notification.application.tokens.Conflict.message"]},{"name":"open override val message: String","description":"io.github.positionpal.notification.application.tokens.NotFound.message","location":"application/io.github.positionpal.notification.application.tokens/-not-found/message.html","searchKeys":["message","open override val message: String","io.github.positionpal.notification.application.tokens.NotFound.message"]},{"name":"open suspend override fun invalidate(userId: UserId, token: Token): Result<Unit>","description":"io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.invalidate","location":"application/io.github.positionpal.notification.application.tokens.impl/-users-tokens-service-impl/invalidate.html","searchKeys":["invalidate","open suspend override fun invalidate(userId: UserId, token: Token): Result<Unit>","io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.invalidate"]},{"name":"open suspend override fun register(userId: UserId, token: Token): Result<UserToken>","description":"io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.register","location":"application/io.github.positionpal.notification.application.tokens.impl/-users-tokens-service-impl/register.html","searchKeys":["register","open suspend override fun register(userId: UserId, token: Token): Result<UserToken>","io.github.positionpal.notification.application.tokens.impl.UsersTokensServiceImpl.register"]},{"name":"fun main(args: Array<String>)","description":"io.github.positionpal.notification.entrypoint.Launcher.main","location":"entrypoint/io.github.positionpal.notification.entrypoint/-launcher/main.html","searchKeys":["main","fun main(args: Array<String>)","io.github.positionpal.notification.entrypoint.Launcher.main"]},{"name":"object Launcher","description":"io.github.positionpal.notification.entrypoint.Launcher","location":"entrypoint/io.github.positionpal.notification.entrypoint/-launcher/index.html","searchKeys":["Launcher","object Launcher","io.github.positionpal.notification.entrypoint.Launcher"]},{"name":"abstract val token: Token","description":"io.github.positionpal.notification.domain.UserToken.token","location":"domain/io.github.positionpal.notification.domain/-user-token/token.html","searchKeys":["token","abstract val token: Token","io.github.positionpal.notification.domain.UserToken.token"]},{"name":"abstract val userId: UserId","description":"io.github.positionpal.notification.domain.UserToken.userId","location":"domain/io.github.positionpal.notification.domain/-user-token/user-id.html","searchKeys":["userId","abstract val userId: UserId","io.github.positionpal.notification.domain.UserToken.userId"]},{"name":"interface UserToken","description":"io.github.positionpal.notification.domain.UserToken","location":"domain/io.github.positionpal.notification.domain/-user-token/index.html","searchKeys":["UserToken","interface UserToken","io.github.positionpal.notification.domain.UserToken"]},{"name":"object Companion","description":"io.github.positionpal.notification.domain.UserToken.Companion","location":"domain/io.github.positionpal.notification.domain/-user-token/-companion/index.html","searchKeys":["Companion","object Companion","io.github.positionpal.notification.domain.UserToken.Companion"]},{"name":"operator fun invoke(userId: UserId, token: String): UserToken","description":"io.github.positionpal.notification.domain.UserToken.Companion.invoke","location":"domain/io.github.positionpal.notification.domain/-user-token/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(userId: UserId, token: String): UserToken","io.github.positionpal.notification.domain.UserToken.Companion.invoke"]},{"name":"typealias Token = String","description":"io.github.positionpal.notification.domain.Token","location":"domain/io.github.positionpal.notification.domain/-token/index.html","searchKeys":["Token","typealias Token = String","io.github.positionpal.notification.domain.Token"]},{"name":"abstract class RabbitMQMessageHandler(configuration: RabbitMQ.Configuration) : AutoCloseable","description":"io.github.positionpal.notification.mom.RabbitMQMessageHandler","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-message-handler/index.html","searchKeys":["RabbitMQMessageHandler","abstract class RabbitMQMessageHandler(configuration: RabbitMQ.Configuration) : AutoCloseable","io.github.positionpal.notification.mom.RabbitMQMessageHandler"]},{"name":"class RabbitMQ(configuration: RabbitMQ.Configuration) : ConnectionFactory<Connection> ","description":"io.github.positionpal.notification.mom.RabbitMQ","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/index.html","searchKeys":["RabbitMQ","class RabbitMQ(configuration: RabbitMQ.Configuration) : ConnectionFactory<Connection> ","io.github.positionpal.notification.mom.RabbitMQ"]},{"name":"class RabbitMQGroupsEventsConsumer(groupsRepository: GroupsRepository, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : RabbitMQMessageHandler","description":"io.github.positionpal.notification.mom.RabbitMQGroupsEventsConsumer","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-groups-events-consumer/index.html","searchKeys":["RabbitMQGroupsEventsConsumer","class RabbitMQGroupsEventsConsumer(groupsRepository: GroupsRepository, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : RabbitMQMessageHandler","io.github.positionpal.notification.mom.RabbitMQGroupsEventsConsumer"]},{"name":"class RabbitMQNotificationsConsumer(notificationPublisher: NotificationPublisher, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : RabbitMQMessageHandler","description":"io.github.positionpal.notification.mom.RabbitMQNotificationsConsumer","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-notifications-consumer/index.html","searchKeys":["RabbitMQNotificationsConsumer","class RabbitMQNotificationsConsumer(notificationPublisher: NotificationPublisher, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : RabbitMQMessageHandler","io.github.positionpal.notification.mom.RabbitMQNotificationsConsumer"]},{"name":"constructor(configuration: RabbitMQ.Configuration)","description":"io.github.positionpal.notification.mom.RabbitMQ.RabbitMQ","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-rabbit-m-q.html","searchKeys":["RabbitMQ","constructor(configuration: RabbitMQ.Configuration)","io.github.positionpal.notification.mom.RabbitMQ.RabbitMQ"]},{"name":"constructor(configuration: RabbitMQ.Configuration)","description":"io.github.positionpal.notification.mom.RabbitMQMessageHandler.RabbitMQMessageHandler","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-message-handler/-rabbit-m-q-message-handler.html","searchKeys":["RabbitMQMessageHandler","constructor(configuration: RabbitMQ.Configuration)","io.github.positionpal.notification.mom.RabbitMQMessageHandler.RabbitMQMessageHandler"]},{"name":"constructor(groupsRepository: GroupsRepository, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"io.github.positionpal.notification.mom.RabbitMQGroupsEventsConsumer.RabbitMQGroupsEventsConsumer","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-groups-events-consumer/-rabbit-m-q-groups-events-consumer.html","searchKeys":["RabbitMQGroupsEventsConsumer","constructor(groupsRepository: GroupsRepository, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","io.github.positionpal.notification.mom.RabbitMQGroupsEventsConsumer.RabbitMQGroupsEventsConsumer"]},{"name":"constructor(host: String, virtualHost: String, port: Int, username: String, password: String)","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.Configuration","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/-configuration.html","searchKeys":["Configuration","constructor(host: String, virtualHost: String, port: Int, username: String, password: String)","io.github.positionpal.notification.mom.RabbitMQ.Configuration.Configuration"]},{"name":"constructor(notificationPublisher: NotificationPublisher, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"io.github.positionpal.notification.mom.RabbitMQNotificationsConsumer.RabbitMQNotificationsConsumer","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-notifications-consumer/-rabbit-m-q-notifications-consumer.html","searchKeys":["RabbitMQNotificationsConsumer","constructor(notificationPublisher: NotificationPublisher, configuration: RabbitMQ.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","io.github.positionpal.notification.mom.RabbitMQNotificationsConsumer.RabbitMQNotificationsConsumer"]},{"name":"data class Configuration(val host: String, val virtualHost: String, val port: Int, val username: String, val password: String)","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/index.html","searchKeys":["Configuration","data class Configuration(val host: String, val virtualHost: String, val port: Int, val username: String, val password: String)","io.github.positionpal.notification.mom.RabbitMQ.Configuration"]},{"name":"fun setup(): Result<Unit>","description":"io.github.positionpal.notification.mom.RabbitMQMessageHandler.setup","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-message-handler/setup.html","searchKeys":["setup","fun setup(): Result<Unit>","io.github.positionpal.notification.mom.RabbitMQMessageHandler.setup"]},{"name":"open override fun close()","description":"io.github.positionpal.notification.mom.RabbitMQMessageHandler.close","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q-message-handler/close.html","searchKeys":["close","open override fun close()","io.github.positionpal.notification.mom.RabbitMQMessageHandler.close"]},{"name":"open override fun connect(): Result<Connection>","description":"io.github.positionpal.notification.mom.RabbitMQ.connect","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/connect.html","searchKeys":["connect","open override fun connect(): Result<Connection>","io.github.positionpal.notification.mom.RabbitMQ.connect"]},{"name":"typealias QueueName = String","description":"io.github.positionpal.notification.mom.QueueName","location":"mom/io.github.positionpal.notification.mom/-queue-name/index.html","searchKeys":["QueueName","typealias QueueName = String","io.github.positionpal.notification.mom.QueueName"]},{"name":"val host: String","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.host","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/host.html","searchKeys":["host","val host: String","io.github.positionpal.notification.mom.RabbitMQ.Configuration.host"]},{"name":"val password: String","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.password","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/password.html","searchKeys":["password","val password: String","io.github.positionpal.notification.mom.RabbitMQ.Configuration.password"]},{"name":"val port: Int","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.port","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/port.html","searchKeys":["port","val port: Int","io.github.positionpal.notification.mom.RabbitMQ.Configuration.port"]},{"name":"val username: String","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.username","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/username.html","searchKeys":["username","val username: String","io.github.positionpal.notification.mom.RabbitMQ.Configuration.username"]},{"name":"val virtualHost: String","description":"io.github.positionpal.notification.mom.RabbitMQ.Configuration.virtualHost","location":"mom/io.github.positionpal.notification.mom/-rabbit-m-q/-configuration/virtual-host.html","searchKeys":["virtualHost","val virtualHost: String","io.github.positionpal.notification.mom.RabbitMQ.Configuration.virtualHost"]},{"name":"class Postgres(configuration: Postgres.Configuration) : ConnectionFactory<Database> ","description":"io.github.positionpal.notification.storage.Postgres","location":"storage/io.github.positionpal.notification.storage/-postgres/index.html","searchKeys":["Postgres","class Postgres(configuration: Postgres.Configuration) : ConnectionFactory<Database> ","io.github.positionpal.notification.storage.Postgres"]},{"name":"class PostgresGroupsRepository(dispatcher: CoroutineDispatcher = Dispatchers.IO) : GroupsRepository","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/index.html","searchKeys":["PostgresGroupsRepository","class PostgresGroupsRepository(dispatcher: CoroutineDispatcher = Dispatchers.IO) : GroupsRepository","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository"]},{"name":"class PostgresUsersTokensRepository(dispatcher: CoroutineDispatcher = Dispatchers.IO) : UsersTokensRepository","description":"io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository","location":"storage/io.github.positionpal.notification.storage.tokens/-postgres-users-tokens-repository/index.html","searchKeys":["PostgresUsersTokensRepository","class PostgresUsersTokensRepository(dispatcher: CoroutineDispatcher = Dispatchers.IO) : UsersTokensRepository","io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository"]},{"name":"constructor(configuration: Postgres.Configuration)","description":"io.github.positionpal.notification.storage.Postgres.Postgres","location":"storage/io.github.positionpal.notification.storage/-postgres/-postgres.html","searchKeys":["Postgres","constructor(configuration: Postgres.Configuration)","io.github.positionpal.notification.storage.Postgres.Postgres"]},{"name":"constructor(databaseName: String = \"notifications_service\", username: String, password: String, host: String, port: Int)","description":"io.github.positionpal.notification.storage.Postgres.Configuration.Configuration","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/-configuration.html","searchKeys":["Configuration","constructor(databaseName: String = \"notifications_service\", username: String, password: String, host: String, port: Int)","io.github.positionpal.notification.storage.Postgres.Configuration.Configuration"]},{"name":"constructor(dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.PostgresGroupsRepository","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/-postgres-groups-repository.html","searchKeys":["PostgresGroupsRepository","constructor(dispatcher: CoroutineDispatcher = Dispatchers.IO)","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.PostgresGroupsRepository"]},{"name":"constructor(dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.PostgresUsersTokensRepository","location":"storage/io.github.positionpal.notification.storage.tokens/-postgres-users-tokens-repository/-postgres-users-tokens-repository.html","searchKeys":["PostgresUsersTokensRepository","constructor(dispatcher: CoroutineDispatcher = Dispatchers.IO)","io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.PostgresUsersTokensRepository"]},{"name":"data class Configuration(val databaseName: String = \"notifications_service\", val username: String, val password: String, val host: String, val port: Int)","description":"io.github.positionpal.notification.storage.Postgres.Configuration","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/index.html","searchKeys":["Configuration","data class Configuration(val databaseName: String = \"notifications_service\", val username: String, val password: String, val host: String, val port: Int)","io.github.positionpal.notification.storage.Postgres.Configuration"]},{"name":"open override fun connect(): Result<Database>","description":"io.github.positionpal.notification.storage.Postgres.connect","location":"storage/io.github.positionpal.notification.storage/-postgres/connect.html","searchKeys":["connect","open override fun connect(): Result<Database>","io.github.positionpal.notification.storage.Postgres.connect"]},{"name":"open suspend override fun addMember(groupId: GroupId, userId: UserId): Result<Unit>","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.addMember","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/add-member.html","searchKeys":["addMember","open suspend override fun addMember(groupId: GroupId, userId: UserId): Result<Unit>","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.addMember"]},{"name":"open suspend override fun delete(userToken: UserToken): Result<Unit>","description":"io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.delete","location":"storage/io.github.positionpal.notification.storage.tokens/-postgres-users-tokens-repository/delete.html","searchKeys":["delete","open suspend override fun delete(userToken: UserToken): Result<Unit>","io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.delete"]},{"name":"open suspend override fun get(userId: UserId): Result<Set<UserToken>>","description":"io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.get","location":"storage/io.github.positionpal.notification.storage.tokens/-postgres-users-tokens-repository/get.html","searchKeys":["get","open suspend override fun get(userId: UserId): Result<Set<UserToken>>","io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.get"]},{"name":"open suspend override fun getGroupsOf(userId: UserId): Result<Set<GroupId>>","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.getGroupsOf","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/get-groups-of.html","searchKeys":["getGroupsOf","open suspend override fun getGroupsOf(userId: UserId): Result<Set<GroupId>>","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.getGroupsOf"]},{"name":"open suspend override fun getMembersOf(groupId: GroupId): Result<Set<UserId>>","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.getMembersOf","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/get-members-of.html","searchKeys":["getMembersOf","open suspend override fun getMembersOf(groupId: GroupId): Result<Set<UserId>>","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.getMembersOf"]},{"name":"open suspend override fun removeMember(groupId: GroupId, userId: UserId): Result<Unit>","description":"io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.removeMember","location":"storage/io.github.positionpal.notification.storage.groups/-postgres-groups-repository/remove-member.html","searchKeys":["removeMember","open suspend override fun removeMember(groupId: GroupId, userId: UserId): Result<Unit>","io.github.positionpal.notification.storage.groups.PostgresGroupsRepository.removeMember"]},{"name":"open suspend override fun save(userToken: UserToken): Result<Unit>","description":"io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.save","location":"storage/io.github.positionpal.notification.storage.tokens/-postgres-users-tokens-repository/save.html","searchKeys":["save","open suspend override fun save(userToken: UserToken): Result<Unit>","io.github.positionpal.notification.storage.tokens.PostgresUsersTokensRepository.save"]},{"name":"val databaseName: String","description":"io.github.positionpal.notification.storage.Postgres.Configuration.databaseName","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/database-name.html","searchKeys":["databaseName","val databaseName: String","io.github.positionpal.notification.storage.Postgres.Configuration.databaseName"]},{"name":"val host: String","description":"io.github.positionpal.notification.storage.Postgres.Configuration.host","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/host.html","searchKeys":["host","val host: String","io.github.positionpal.notification.storage.Postgres.Configuration.host"]},{"name":"val password: String","description":"io.github.positionpal.notification.storage.Postgres.Configuration.password","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/password.html","searchKeys":["password","val password: String","io.github.positionpal.notification.storage.Postgres.Configuration.password"]},{"name":"val port: Int","description":"io.github.positionpal.notification.storage.Postgres.Configuration.port","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/port.html","searchKeys":["port","val port: Int","io.github.positionpal.notification.storage.Postgres.Configuration.port"]},{"name":"val username: String","description":"io.github.positionpal.notification.storage.Postgres.Configuration.username","location":"storage/io.github.positionpal.notification.storage/-postgres/-configuration/username.html","searchKeys":["username","val username: String","io.github.positionpal.notification.storage.Postgres.Configuration.username"]},{"name":"abstract fun connect(): Result<Connection>","description":"io.github.positionpal.notification.commons.ConnectionFactory.connect","location":"commons/io.github.positionpal.notification.commons/-connection-factory/connect.html","searchKeys":["connect","abstract fun connect(): Result<Connection>","io.github.positionpal.notification.commons.ConnectionFactory.connect"]},{"name":"class EnvDelegate(key: String)","description":"io.github.positionpal.notification.commons.EnvDelegate","location":"commons/io.github.positionpal.notification.commons/-env-delegate/index.html","searchKeys":["EnvDelegate","class EnvDelegate(key: String)","io.github.positionpal.notification.commons.EnvDelegate"]},{"name":"constructor(key: String)","description":"io.github.positionpal.notification.commons.EnvDelegate.EnvDelegate","location":"commons/io.github.positionpal.notification.commons/-env-delegate/-env-delegate.html","searchKeys":["EnvDelegate","constructor(key: String)","io.github.positionpal.notification.commons.EnvDelegate.EnvDelegate"]},{"name":"fun env(key: String): EnvDelegate","description":"io.github.positionpal.notification.commons.env","location":"commons/io.github.positionpal.notification.commons/env.html","searchKeys":["env","fun env(key: String): EnvDelegate","io.github.positionpal.notification.commons.env"]},{"name":"fun interface ConnectionFactory<Connection>","description":"io.github.positionpal.notification.commons.ConnectionFactory","location":"commons/io.github.positionpal.notification.commons/-connection-factory/index.html","searchKeys":["ConnectionFactory","fun interface ConnectionFactory<Connection>","io.github.positionpal.notification.commons.ConnectionFactory"]},{"name":"inline fun <T, R> Result<T>.flatMap(onSuccess: (T) -> Result<R>): Result<R>","description":"io.github.positionpal.notification.commons.flatMap","location":"commons/io.github.positionpal.notification.commons/flat-map.html","searchKeys":["flatMap","inline fun <T, R> Result<T>.flatMap(onSuccess: (T) -> Result<R>): Result<R>","io.github.positionpal.notification.commons.flatMap"]},{"name":"operator fun getValue(thisRef: Any?, property: KProperty<*>): String?","description":"io.github.positionpal.notification.commons.EnvDelegate.getValue","location":"commons/io.github.positionpal.notification.commons/-env-delegate/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any?, property: KProperty<*>): String?","io.github.positionpal.notification.commons.EnvDelegate.getValue"]},{"name":"class GrpcServer(configuration: GrpcServer.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : AutoCloseable","description":"io.github.positionpal.notification.grpc.GrpcServer","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/index.html","searchKeys":["GrpcServer","class GrpcServer(configuration: GrpcServer.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO) : AutoCloseable","io.github.positionpal.notification.grpc.GrpcServer"]},{"name":"class GrpcUsersTokensService(usersTokensService: UsersTokensService) : UsersTokensServiceGrpcKt.UsersTokensServiceCoroutineImplBase","description":"io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService","location":"grpc/io.github.positionpal.notification.grpc.tokens/-grpc-users-tokens-service/index.html","searchKeys":["GrpcUsersTokensService","class GrpcUsersTokensService(usersTokensService: UsersTokensService) : UsersTokensServiceGrpcKt.UsersTokensServiceCoroutineImplBase","io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService"]},{"name":"constructor(configuration: GrpcServer.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"io.github.positionpal.notification.grpc.GrpcServer.GrpcServer","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-grpc-server.html","searchKeys":["GrpcServer","constructor(configuration: GrpcServer.Configuration, dispatcher: CoroutineDispatcher = Dispatchers.IO)","io.github.positionpal.notification.grpc.GrpcServer.GrpcServer"]},{"name":"constructor(port: Int, services: List<BindableService> = emptyList(), shutdownTimeout: Long)","description":"io.github.positionpal.notification.grpc.GrpcServer.Configuration.Configuration","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-configuration/-configuration.html","searchKeys":["Configuration","constructor(port: Int, services: List<BindableService> = emptyList(), shutdownTimeout: Long)","io.github.positionpal.notification.grpc.GrpcServer.Configuration.Configuration"]},{"name":"constructor(usersTokensService: UsersTokensService)","description":"io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.GrpcUsersTokensService","location":"grpc/io.github.positionpal.notification.grpc.tokens/-grpc-users-tokens-service/-grpc-users-tokens-service.html","searchKeys":["GrpcUsersTokensService","constructor(usersTokensService: UsersTokensService)","io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.GrpcUsersTokensService"]},{"name":"data class Configuration(val port: Int, val services: List<BindableService> = emptyList(), val shutdownTimeout: Long)","description":"io.github.positionpal.notification.grpc.GrpcServer.Configuration","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-configuration/index.html","searchKeys":["Configuration","data class Configuration(val port: Int, val services: List<BindableService> = emptyList(), val shutdownTimeout: Long)","io.github.positionpal.notification.grpc.GrpcServer.Configuration"]},{"name":"fun shutdown()","description":"io.github.positionpal.notification.grpc.GrpcServer.shutdown","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/shutdown.html","searchKeys":["shutdown","fun shutdown()","io.github.positionpal.notification.grpc.GrpcServer.shutdown"]},{"name":"fun start()","description":"io.github.positionpal.notification.grpc.GrpcServer.start","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/start.html","searchKeys":["start","fun start()","io.github.positionpal.notification.grpc.GrpcServer.start"]},{"name":"open override fun close()","description":"io.github.positionpal.notification.grpc.GrpcServer.close","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/close.html","searchKeys":["close","open override fun close()","io.github.positionpal.notification.grpc.GrpcServer.close"]},{"name":"open suspend override fun invalidate(request: Proto.UserToken): Proto.EmptyResponse","description":"io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.invalidate","location":"grpc/io.github.positionpal.notification.grpc.tokens/-grpc-users-tokens-service/invalidate.html","searchKeys":["invalidate","open suspend override fun invalidate(request: Proto.UserToken): Proto.EmptyResponse","io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.invalidate"]},{"name":"open suspend override fun register(request: Proto.UserToken): Proto.EmptyResponse","description":"io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.register","location":"grpc/io.github.positionpal.notification.grpc.tokens/-grpc-users-tokens-service/register.html","searchKeys":["register","open suspend override fun register(request: Proto.UserToken): Proto.EmptyResponse","io.github.positionpal.notification.grpc.tokens.GrpcUsersTokensService.register"]},{"name":"val port: Int","description":"io.github.positionpal.notification.grpc.GrpcServer.Configuration.port","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-configuration/port.html","searchKeys":["port","val port: Int","io.github.positionpal.notification.grpc.GrpcServer.Configuration.port"]},{"name":"val services: List<BindableService>","description":"io.github.positionpal.notification.grpc.GrpcServer.Configuration.services","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-configuration/services.html","searchKeys":["services","val services: List<BindableService>","io.github.positionpal.notification.grpc.GrpcServer.Configuration.services"]},{"name":"val shutdownTimeout: Long","description":"io.github.positionpal.notification.grpc.GrpcServer.Configuration.shutdownTimeout","location":"grpc/io.github.positionpal.notification.grpc/-grpc-server/-configuration/shutdown-timeout.html","searchKeys":["shutdownTimeout","val shutdownTimeout: Long","io.github.positionpal.notification.grpc.GrpcServer.Configuration.shutdownTimeout"]}]